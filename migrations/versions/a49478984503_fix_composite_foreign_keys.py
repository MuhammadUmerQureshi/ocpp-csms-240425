"""Fix composite foreign keys

Revision ID: a49478984503
Revises: 
Create Date: 2025-04-26 11:27:21.802413

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a49478984503'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Companies',
    sa.Column('CompanyId', sa.String(length=5), nullable=False),
    sa.Column('CompanyName', sa.String(length=30), nullable=True),
    sa.Column('CompanyEnabled', sa.Boolean(), nullable=True),
    sa.Column('CompanyHomePhoto', sa.Text(), nullable=True),
    sa.Column('CompanyBrandColour', sa.String(length=10), nullable=True),
    sa.Column('CompanyBrandLogo', sa.Text(), nullable=True),
    sa.Column('CompanyBrandFavicon', sa.Text(), nullable=True),
    sa.Column('CompanyCreated', sa.DateTime(), nullable=True),
    sa.Column('CompanyUpdated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('CompanyId')
    )
    op.create_index(op.f('ix_Companies_CompanyId'), 'Companies', ['CompanyId'], unique=False)
    op.create_table('Discounts',
    sa.Column('DiscountId', sa.String(length=5), nullable=False),
    sa.Column('DiscountName', sa.String(length=20), nullable=True),
    sa.Column('DiscountEnabled', sa.Boolean(), nullable=True),
    sa.Column('DiscountPercent', sa.Integer(), nullable=True),
    sa.Column('DiscountFixedFee', sa.Float(), nullable=True),
    sa.Column('DiscountStartDate', sa.DateTime(), nullable=True),
    sa.Column('DiscountEndDate', sa.DateTime(), nullable=True),
    sa.Column('DiscountCreated', sa.DateTime(), nullable=True),
    sa.Column('DiscountUpdated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('DiscountId')
    )
    op.create_index(op.f('ix_Discounts_DiscountId'), 'Discounts', ['DiscountId'], unique=False)
    op.create_table('PaymentMethods',
    sa.Column('PaymentMethodId', sa.String(length=5), nullable=False),
    sa.Column('PaymentMethodName', sa.String(length=20), nullable=True),
    sa.Column('PaymentMethodEnabled', sa.Boolean(), nullable=True),
    sa.Column('PaymentMethodCreated', sa.DateTime(), nullable=True),
    sa.Column('PaymentMethodUpdated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('PaymentMethodId')
    )
    op.create_index(op.f('ix_PaymentMethods_PaymentMethodId'), 'PaymentMethods', ['PaymentMethodId'], unique=False)
    op.create_table('SitesGroup',
    sa.Column('SitesGroupId', sa.String(length=5), nullable=False),
    sa.Column('SitesGroupName', sa.String(length=30), nullable=True),
    sa.Column('SitesGroupEnabled', sa.Boolean(), nullable=True),
    sa.Column('SitesGroupCreated', sa.DateTime(), nullable=True),
    sa.Column('SitesGroupUpdated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('SitesGroupId')
    )
    op.create_index(op.f('ix_SitesGroup_SitesGroupId'), 'SitesGroup', ['SitesGroupId'], unique=False)
    op.create_table('Tariffs',
    sa.Column('TariffsId', sa.String(length=5), nullable=False),
    sa.Column('TariffsEnabled', sa.Boolean(), nullable=True),
    sa.Column('TariffsName', sa.String(length=30), nullable=True),
    sa.Column('TariffsType', sa.String(length=255), nullable=True),
    sa.Column('TariffsFixedStartFee', sa.Float(), nullable=True),
    sa.Column('TariffsPerKW', sa.Float(), nullable=True),
    sa.Column('TariffsPerMinute', sa.Float(), nullable=True),
    sa.Column('TariffsIdleChargingFee', sa.Float(), nullable=True),
    sa.Column('TariffsIdleApplyAfter', sa.DateTime(), nullable=True),
    sa.Column('TariffsTaxRateDaytime', sa.Integer(), nullable=True),
    sa.Column('TariffsTaxRateNighttime', sa.Integer(), nullable=True),
    sa.Column('TariffsCreated', sa.DateTime(), nullable=True),
    sa.Column('TariffsUpdated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('TariffsId')
    )
    op.create_index(op.f('ix_Tariffs_TariffsId'), 'Tariffs', ['TariffsId'], unique=False)
    op.create_table('DriversGroup',
    sa.Column('DriversGroupId', sa.String(length=5), nullable=False),
    sa.Column('DriversGroupName', sa.String(length=30), nullable=True),
    sa.Column('DriversGroupEnabled', sa.Boolean(), nullable=True),
    sa.Column('DriversGroupDiscountId', sa.String(length=5), nullable=True),
    sa.Column('DriversGroupCreated', sa.DateTime(), nullable=True),
    sa.Column('DriversGroupUpdated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['DriversGroupDiscountId'], ['Discounts.DiscountId'], ),
    sa.PrimaryKeyConstraint('DriversGroupId')
    )
    op.create_index(op.f('ix_DriversGroup_DriversGroupId'), 'DriversGroup', ['DriversGroupId'], unique=False)
    op.create_table('PaymentTransactions',
    sa.Column('PaymentTransactionId', sa.String(length=30), nullable=False),
    sa.Column('PaymentTransactionMethodUsed', sa.String(length=6), nullable=True),
    sa.Column('PaymentTransactionDriverId', sa.String(length=10), nullable=True),
    sa.Column('PaymentTransactionDateTime', sa.DateTime(), nullable=True),
    sa.Column('PaymentTransactionAmount', sa.Float(), nullable=True),
    sa.Column('PaymentTransactionStatus', sa.String(length=10), nullable=True),
    sa.Column('PaymentTransactionCompanyId', sa.String(length=5), nullable=True),
    sa.Column('PaymentTransactionSiteId', sa.String(length=5), nullable=True),
    sa.Column('PaymentTransactionChargerId', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['PaymentTransactionMethodUsed'], ['PaymentMethods.PaymentMethodId'], ),
    sa.PrimaryKeyConstraint('PaymentTransactionId')
    )
    op.create_index(op.f('ix_PaymentTransactions_PaymentTransactionId'), 'PaymentTransactions', ['PaymentTransactionId'], unique=False)
    op.create_table('Sites',
    sa.Column('SiteCompanyID', sa.String(length=5), nullable=False),
    sa.Column('SiteId', sa.String(length=5), nullable=False),
    sa.Column('SiteEnabled', sa.Boolean(), nullable=True),
    sa.Column('SiteName', sa.String(length=30), nullable=True),
    sa.Column('SiteGroupId', sa.String(length=5), nullable=True),
    sa.Column('SiteAddress', sa.String(length=40), nullable=True),
    sa.Column('SiteCity', sa.String(length=30), nullable=True),
    sa.Column('SiteRegion', sa.String(length=30), nullable=True),
    sa.Column('SiteCountry', sa.String(length=30), nullable=True),
    sa.Column('SiteZipCode', sa.String(length=10), nullable=True),
    sa.Column('SiteGeoCoord', sa.String(length=255), nullable=True),
    sa.Column('SiteTaxRate', sa.Integer(), nullable=True),
    sa.Column('SiteContactName', sa.String(length=50), nullable=True),
    sa.Column('SiteContactPh', sa.String(length=20), nullable=True),
    sa.Column('SiteContactEmail', sa.String(length=50), nullable=True),
    sa.Column('SiteCreated', sa.DateTime(), nullable=True),
    sa.Column('SiteUpdated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['SiteCompanyID'], ['Companies.CompanyId'], ),
    sa.ForeignKeyConstraint(['SiteGroupId'], ['SitesGroup.SitesGroupId'], ),
    sa.PrimaryKeyConstraint('SiteCompanyID', 'SiteId')
    )
    op.create_table('Chargers',
    sa.Column('ChargerCompanyId', sa.String(length=5), nullable=False),
    sa.Column('ChargerSiteId', sa.String(length=5), nullable=False),
    sa.Column('ChargerId', sa.String(length=10), nullable=False),
    sa.Column('ChargerGeoCoord', sa.String(length=60), nullable=True),
    sa.Column('ChargerName', sa.String(length=30), nullable=True),
    sa.Column('ChargerGroupId', sa.String(length=5), nullable=True),
    sa.Column('ChargerBrand', sa.String(length=30), nullable=True),
    sa.Column('ChargerModel', sa.String(length=30), nullable=True),
    sa.Column('Charger_Type', sa.String(length=255), nullable=True),
    sa.Column('ChargerSerial', sa.String(length=30), nullable=True),
    sa.Column('ChargerMeter', sa.String(length=10), nullable=True),
    sa.Column('ChargerMeterSerial', sa.String(length=30), nullable=True),
    sa.Column('ChargerPincode', sa.String(length=10), nullable=True),
    sa.Column('ChargerWsURL', sa.String(length=255), nullable=True),
    sa.Column('Charger_Availability', sa.String(length=20), nullable=True),
    sa.Column('ChargerIsOnline', sa.Boolean(), nullable=True),
    sa.Column('ChargerStatusNow', sa.String(length=255), nullable=True),
    sa.Column('ChargerEnabled', sa.Boolean(), nullable=True),
    sa.Column('Charger_Access_Type', sa.String(length=15), nullable=True),
    sa.Column('ChargerConnectorId1', sa.String(length=10), nullable=True),
    sa.Column('ChargerConnectorId2', sa.String(length=10), nullable=True),
    sa.Column('ChargerActive24x7', sa.Boolean(), nullable=True),
    sa.Column('ChargerMonFrom', sa.DateTime(), nullable=True),
    sa.Column('ChargerMonTo', sa.DateTime(), nullable=True),
    sa.Column('ChargerTueFrom', sa.DateTime(), nullable=True),
    sa.Column('ChargerTueTo', sa.DateTime(), nullable=True),
    sa.Column('ChargerWedFrom', sa.DateTime(), nullable=True),
    sa.Column('ChargerWedTo', sa.DateTime(), nullable=True),
    sa.Column('ChargerThuFrom', sa.DateTime(), nullable=True),
    sa.Column('ChargerThuTo', sa.DateTime(), nullable=True),
    sa.Column('ChargerFriFrom', sa.DateTime(), nullable=True),
    sa.Column('ChargerFriTo', sa.DateTime(), nullable=True),
    sa.Column('ChargerSatFrom', sa.DateTime(), nullable=True),
    sa.Column('ChargerSatTo', sa.DateTime(), nullable=True),
    sa.Column('ChargerSunFrom', sa.DateTime(), nullable=True),
    sa.Column('ChargerSunTo', sa.DateTime(), nullable=True),
    sa.Column('ChargerLastConn', sa.DateTime(), nullable=True),
    sa.Column('ChargerLastDisconn', sa.DateTime(), nullable=True),
    sa.Column('ChargerLastHeartbeat', sa.DateTime(), nullable=True),
    sa.Column('ChargerPhoto', sa.Text(), nullable=True),
    sa.Column('ChargerFirmwareVersion', sa.String(length=10), nullable=True),
    sa.Column('ChargerPaymentId', sa.String(length=5), nullable=True),
    sa.Column('ChargerCreated', sa.DateTime(), nullable=True),
    sa.Column('Charger_Updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ChargerCompanyId', 'ChargerSiteId'], ['Sites.SiteCompanyID', 'Sites.SiteId'], ),
    sa.ForeignKeyConstraint(['ChargerCompanyId'], ['Companies.CompanyId'], ),
    sa.PrimaryKeyConstraint('ChargerCompanyId', 'ChargerSiteId', 'ChargerId')
    )
    op.create_table('Drivers',
    sa.Column('DriverCompanyId', sa.String(length=5), nullable=False),
    sa.Column('DriverId', sa.String(length=10), nullable=False),
    sa.Column('DriverEnabled', sa.Boolean(), nullable=True),
    sa.Column('DriverFullName', sa.String(length=30), nullable=True),
    sa.Column('DriverEmail', sa.String(length=30), nullable=True),
    sa.Column('DriverPhone', sa.String(length=10), nullable=True),
    sa.Column('DriverGroupId', sa.String(length=5), nullable=True),
    sa.Column('DriverNotifActions', sa.Boolean(), nullable=True),
    sa.Column('DriverNotifPayments', sa.Boolean(), nullable=True),
    sa.Column('DriverNotifSystem', sa.Boolean(), nullable=True),
    sa.Column('DriverTariffId', sa.String(length=5), nullable=True),
    sa.Column('DriverCreated', sa.DateTime(), nullable=True),
    sa.Column('DriverUpdated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['DriverCompanyId'], ['Companies.CompanyId'], ),
    sa.ForeignKeyConstraint(['DriverGroupId'], ['DriversGroup.DriversGroupId'], ),
    sa.ForeignKeyConstraint(['DriverTariffId'], ['Tariffs.TariffsId'], ),
    sa.PrimaryKeyConstraint('DriverCompanyId', 'DriverId')
    )
    op.create_table('Connectors',
    sa.Column('ConnectorCompanyId', sa.String(length=5), nullable=False),
    sa.Column('ConnectorSiteId', sa.String(length=5), nullable=False),
    sa.Column('ConnectorChargerId', sa.String(length=10), nullable=False),
    sa.Column('ConnectorId', sa.String(length=10), nullable=False),
    sa.Column('ConnectorName', sa.String(length=20), nullable=True),
    sa.Column('ConnectorType', sa.String(length=255), nullable=True),
    sa.Column('ConnectorEnabled', sa.Boolean(), nullable=True),
    sa.Column('ConnectorStatus', sa.String(length=50), nullable=True),
    sa.Column('ConnectorRatedPowerKW', sa.Integer(), nullable=True),
    sa.Column('ConnectorCreated', sa.DateTime(), nullable=True),
    sa.Column('ConnectorUpdated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ConnectorCompanyId', 'ConnectorSiteId', 'ConnectorChargerId'], ['Chargers.ChargerCompanyId', 'Chargers.ChargerSiteId', 'Chargers.ChargerId'], ),
    sa.PrimaryKeyConstraint('ConnectorCompanyId', 'ConnectorSiteId', 'ConnectorChargerId', 'ConnectorId')
    )
    op.create_table('RFIDCards',
    sa.Column('RFIDCardCompanyId', sa.String(length=5), nullable=False),
    sa.Column('RFIDCardDriverId', sa.String(length=10), nullable=False),
    sa.Column('RFIDCardId', sa.String(length=20), nullable=False),
    sa.Column('RFIDCardEnabled', sa.Boolean(), nullable=True),
    sa.Column('RFIDCardNameOn', sa.String(length=30), nullable=True),
    sa.Column('RFIDCardNumberOn', sa.String(length=20), nullable=True),
    sa.Column('RFIDCardExpiration', sa.DateTime(), nullable=True),
    sa.Column('RFIDCardCreated', sa.DateTime(), nullable=True),
    sa.Column('RFIDCardUpdated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['RFIDCardCompanyId', 'RFIDCardDriverId'], ['Drivers.DriverCompanyId', 'Drivers.DriverId'], ),
    sa.PrimaryKeyConstraint('RFIDCardCompanyId', 'RFIDCardDriverId', 'RFIDCardId')
    )
    op.create_table('ChargeSessions',
    sa.Column('ChargeSessionId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ChargerSessionCompanyId', sa.String(length=5), nullable=True),
    sa.Column('ChargerSessionSiteId', sa.String(length=5), nullable=True),
    sa.Column('ChargerSessionChargerId', sa.String(length=10), nullable=True),
    sa.Column('ChargerSessionConnectorId', sa.String(length=10), nullable=True),
    sa.Column('ChargerSessionDriverId', sa.String(length=10), nullable=True),
    sa.Column('ChargerSessionRFIDCard', sa.String(length=20), nullable=True),
    sa.Column('ChargerSessionStart', sa.DateTime(), nullable=True),
    sa.Column('ChargerSessionEnd', sa.DateTime(), nullable=True),
    sa.Column('ChargerSessionDuration', sa.Integer(), nullable=True),
    sa.Column('ChargerSessionReason', sa.String(length=20), nullable=True),
    sa.Column('ChargerSessionStatus', sa.String(length=255), nullable=True),
    sa.Column('ChargerSessionEnergyKWH', sa.Integer(), nullable=True),
    sa.Column('ChargerSessionPricingPlanId', sa.String(length=5), nullable=True),
    sa.Column('ChargerSessionCost', sa.Float(), nullable=True),
    sa.Column('ChargerSessionDiscountId', sa.String(length=5), nullable=True),
    sa.Column('ChargerSessionPaymentId', sa.String(length=5), nullable=True),
    sa.Column('ChargerSessionPaymentAmount', sa.Float(), nullable=True),
    sa.Column('ChargerSessionPaymentStatus', sa.String(length=255), nullable=True),
    sa.Column('ChargerSessionCreated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ChargerSessionCompanyId', 'ChargerSessionDriverId', 'ChargerSessionRFIDCard'], ['RFIDCards.RFIDCardCompanyId', 'RFIDCards.RFIDCardDriverId', 'RFIDCards.RFIDCardId'], ),
    sa.ForeignKeyConstraint(['ChargerSessionCompanyId', 'ChargerSessionDriverId'], ['Drivers.DriverCompanyId', 'Drivers.DriverId'], ),
    sa.ForeignKeyConstraint(['ChargerSessionCompanyId', 'ChargerSessionSiteId', 'ChargerSessionChargerId', 'ChargerSessionConnectorId'], ['Connectors.ConnectorCompanyId', 'Connectors.ConnectorSiteId', 'Connectors.ConnectorChargerId', 'Connectors.ConnectorId'], ),
    sa.ForeignKeyConstraint(['ChargerSessionCompanyId', 'ChargerSessionSiteId', 'ChargerSessionChargerId'], ['Chargers.ChargerCompanyId', 'Chargers.ChargerSiteId', 'Chargers.ChargerId'], ),
    sa.ForeignKeyConstraint(['ChargerSessionDiscountId'], ['Discounts.DiscountId'], ),
    sa.ForeignKeyConstraint(['ChargerSessionPricingPlanId'], ['Tariffs.TariffsId'], ),
    sa.PrimaryKeyConstraint('ChargeSessionId')
    )
    op.create_table('EventsData',
    sa.Column('EventsDataSessionId', sa.Integer(), nullable=False),
    sa.Column('EventsDataCompanyId', sa.String(length=5), nullable=True),
    sa.Column('EventsDataSiteId', sa.String(length=5), nullable=True),
    sa.Column('EventsDataChargerId', sa.String(length=10), nullable=True),
    sa.Column('EventsDataConnectorId', sa.String(length=10), nullable=True),
    sa.Column('EventsDataDateTime', sa.DateTime(), nullable=True),
    sa.Column('EventsDataType', sa.String(length=10), nullable=True),
    sa.Column('EventsDataTriggerReason', sa.String(length=50), nullable=True),
    sa.Column('EventsDataOrigin', sa.String(length=10), nullable=True),
    sa.Column('EventsDataData', sa.String(length=255), nullable=True),
    sa.Column('EventsDataTemperature', sa.Integer(), nullable=True),
    sa.Column('EventsDataCurrent', sa.Integer(), nullable=True),
    sa.Column('EventsDataVoltage', sa.Integer(), nullable=True),
    sa.Column('EventsDataMeterValue', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['EventsDataSessionId'], ['ChargeSessions.ChargeSessionId'], ),
    sa.PrimaryKeyConstraint('EventsDataSessionId')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('EventsData')
    op.drop_table('ChargeSessions')
    op.drop_table('RFIDCards')
    op.drop_table('Connectors')
    op.drop_table('Drivers')
    op.drop_table('Chargers')
    op.drop_table('Sites')
    op.drop_index(op.f('ix_PaymentTransactions_PaymentTransactionId'), table_name='PaymentTransactions')
    op.drop_table('PaymentTransactions')
    op.drop_index(op.f('ix_DriversGroup_DriversGroupId'), table_name='DriversGroup')
    op.drop_table('DriversGroup')
    op.drop_index(op.f('ix_Tariffs_TariffsId'), table_name='Tariffs')
    op.drop_table('Tariffs')
    op.drop_index(op.f('ix_SitesGroup_SitesGroupId'), table_name='SitesGroup')
    op.drop_table('SitesGroup')
    op.drop_index(op.f('ix_PaymentMethods_PaymentMethodId'), table_name='PaymentMethods')
    op.drop_table('PaymentMethods')
    op.drop_index(op.f('ix_Discounts_DiscountId'), table_name='Discounts')
    op.drop_table('Discounts')
    op.drop_index(op.f('ix_Companies_CompanyId'), table_name='Companies')
    op.drop_table('Companies')
    # ### end Alembic commands ###
